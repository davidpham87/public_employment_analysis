data.links
data.links
data
data
colnames(data[[1]])
melt.data
data[[1]]
data
data[[1]]
data
data
data
data[[i]]
data[[i]][, list(LOCATION)]
colnames(data[[i]])
data[[i]][, TIME]
data[[i]][, LOCATION]
"LOCATION"==colnames(data[[i]])[1]
colnames(data[[i]])[1]
gsub('["[:blank:]]', '', "﻿LOCATION")
gsub('[:blank:]', '', "﻿LOCATION")
gsub('[::blank::]', '', "﻿LOCATION")
gsub('[[:blank:]]', '', "﻿LOCATION")
"LOCATION"
substring("﻿LOCATION", 0, 1)
strtrime("﻿LOCATION")
strtrim("﻿LOCATION")
strtrim("﻿LOCATION", 1)
strtrim("﻿LOCATION", length("LOCATION"))
strtrim("﻿LOCATION", 10)
strtrim("﻿LOCATION", 10)
length("LOCATION")
strtrim("﻿LOCATION", 10
)
data[[i]]
data[[i]]
x
x
data
x
data
o
x
data[[i]]
data
gini
data[[1]]
x
data[[1]]
data[[1]]
data[[1]]
data[[1]][1:10]
data[[1]]
x <- data[[2]]
x
  x %>%
    colnames %>%
    { gsub('["[:blank:]]', '', .) } %>%
    strtrim(nchar(.)) -> colnames(x)

x
setkey(x, 'LOCATION')
x['USA']
data
data[[1]]
data[[1]]$MEASURE
data.links
data[[i]]
names(data)
table(data[[1]])
>
lapply(data, summary)
table(data[[1]]$LOCATION)
t(table(data[[1]]$LOCATION))
t(t(table(data[[1]]$LOCATION)))
lenght(t(t(table(data[[1]]$LOCATION))))
length(t(t(table(data[[1]]$LOCATION))))
data[[3]]
data.links
eos[[1]]
str(eos[[1]], 2)
eos[[1]]
colnames(eos[[1]])
setkey(eos[[1]], 'country')
head(eos[[1]])
head(eos[[1]])
ls()
dtas
eos[[1]]
eos[[1]]['Switzerland']
tail(eos[[1]]['Switzerland'])
install.packages('stargazer')
chooseCRANMirror()
choseCRANMirror()
choseCRANMirror
?choseCRANMirror
chooseCRANmirror
chooseCRANmirror()
m <- getCRANmirrors(all = FALSE, local.only = FALSE)
m
setInternet2()
setInternet?
()
setInternet2
gdp
?write.csv
gdp
?fread
write.csv?
()
?write.csv
gdp
gdp
missing.rate
barplot(missing.rate)
barplot(missing.rate, horiz=T)
barplot(missing.rate, horiz=T, angle=0)
barplot(missing.rate, horiz=T, angle=90)
sessionInfo()
eo
colnames(eo)
eo
eo[, summary(Variable)]
eo[, summary(as.factor(Variable))]
eo[, sort(summary(as.factor(Variable)))]
eo[, summary(sort(as.factor(Variable)))]
install.packages('rsdmx')
loadPackages()
loadPackages()
eo
str(eo)
sessionInfo()
str(eo.li, 1)
str(eo.li, 2)
install.packages('rjsdmx')
install.packages('RJSDMX')
library(RJSDMX)
str(eo.li)
str(eo.li, 1)
str(eo.li, 2)
str(ds, 1)
str(ds, 1)
str(ds, 2)
ds[[1]]
str(ds, 1)
str(ds[[-1]], 1)
str(ds[-1], 1)
parseSerieKey(ds[[1]])
parseSeriesKey(ds[[1]])
parseSeriesKey(ds[[1]])
parseSeriesKey(ds[[1]][[1]])
debug(parseSeriekey)
debug(parseSerieKey)
debug(parseSeriesKey)
parseSeriesKey(ds[[1]][[1]])
n
n
li
li
n
li
parseSeriesKey(ds[[1]][[1]])
ds[1]
str(ds[1])
str(ds[1], 1)
str(ds[[1]], 1)
str(serie[c(-1, -2)], 2)
str(ds[c(-1, -2)], 1)
str(ds[1][c(-1, -2)], 1)
str(ds[2][c(-1, -2)], 1)
str(ds[3][c(-1, -2)], 1)
ds[1]
str(ds[1], 2)
str(ds[[1]][c(-1, -2)], 2)
str(ds[[1]][c(-1, -2)], 1)
ds[[1]][c(-1, -2)][[1]]
parseSerie(ds[[1]][c(-1, -2)][[1]])
parseSerie(ds[[1]][c(-1, -2)][[1]])
parseSerie(ds[[1]][c(-1, -2)][[1]])
parseSerie(ds[[1]])
parseSerie(ds[[1]])
n
n
n
serie[c(-1, -2)]
parseSerie(ds[[1]])
n
n
serie[c(-1, -2)]
str(serie[c(-1, -2)], 2)
str(serie[c(-1, -2)], 1)
serie[c(-1, -2)][[1]
]
parseSerie(ds[[1]])
parseSerie(ds[[1]])
parseSerie(ds[[1]])
parseSerie(ds[[1]])
res <- parseSerie(ds[[1]])
res
res <- parseSerie(ds[[1]])
res
res[, .(colnames(res)):= lapply(.SD, as.numeric)]
res[, .(as.symbol(colnames(res))):= lapply(.SD, as.numeric)]
res <- res[, lapply(.SD, as.numeric)]
res
res$VaLUE
res$VALUE
res <- res[, lapply(.SD, as.numeric)]
res <- parseSerie(ds[[1]])
res
str(ds, 1)
library(parallel)
ds[1]
str(ds[1], 1)
str(ds[[1]], 1)
names(ds[[1]])
ds$Obs
ds[[1]]$Obs
ds[[1]]$Obs
data.frame(names(ds[1]), seq_along(names(ds[1])))
data.frame(names(ds[[1]]), seq_along(names(ds[1])))
data.frame(names(ds[[1]]), seq_along(ds[[1]]))
list(names(ds[[1]]), seq_along(ds[[1]]))
data.frame(names(ds[[1]]), seq_along(ds[[1]])
)
data.table(names(ds[[1]]), seq_along(ds[[1]]))
data.table(names(ds[[1]]), seq_along(ds[[1]]))[V1=='OBS']
data.table(names(ds[[1]]), seq_along(ds[[1]]))[V1=='Obs']
data.table(names(ds[[1]]), seq_along(ds[[1]]))[V1=='Obs']
rbindlist(list(data.table(x=c(1, 2)), NULL,data.table(x=c(1, 2))))
n
n
n
n
n
n
n
n
n
n
n
n
meta.data
res
cbind(meta.data, res)
c
options(mc.cores)
detectCores()
res
res
str(ds, 3)
str(ds, 3)
str(ds, 2)
lapply(ds, function(l) names(l)[1])
]
res
ds[1]
ds[[1]]
ds[[1]][[2]]
ds[[1]][2]
ds[[1]][[2]][2]
as.data.table(ds[[1]][[2]][2])
data.table(ds[[1]][[2]][2])
data.table(ds[[1]][[2]][[2]])
s <- ds[[1]]
s
serie <- s
attr.data <- parseSeriesKey(serie$Attributes)
attr.data
res
summary(res$Value.VARIABLE)
table(res$Value.VARIABLE)
length(table(res$Value.VARIABLE))
res
res.d <- dcast(res, Location+Time ~ .)
nx
nx
nx
new.nx
res
res
names(res)
colnames(res)
res
?tolower
?tolower
res
res
res.d
res.d[, lapply(.SD, function(x) sum(is.na(x)))]
res.d[, lapply(.SD, function(x) sum(is.na(x))/length(x))]
as.numeric(res.d[, lapply(.SD, function(x) sum(is.na(x))/length(x))])
t(res.d[, lapply(.SD, function(x) sum(is.na(x))/length(x))])
sort(t(res.d[, lapply(.SD, function(x) sum(is.na(x))/length(x))]))
t(res.d[, lapply(.SD, function(x) sum(is.na(x))/length(x))])
help(write.csv)
gsub('\\.xml$', '_melt.csv', file.path)
file.path

. + 
gsub('\\.xml$', '_melt.csv', 'xml.xml')
csvx
csvx
csvx
csvx
warnings()
eos[[1]]
eos[[1]][, lapply(.SD, summary)]
eos[[1]][, lapply(.SD, function(x) print(summary(x)))]
summary(eos[[1]])
eos[[1]]
eos[[2]]
eos
csvx
csvx
eos
eos
eos
eos
eos
eos
eos
eos
eos
eos
eos
eos[[1]]
summary(eos)
summary(eos[[1]])
eos
eos
eos
eos
eos[, as.numeric(VALUE)]
eos[[1]][, as.numeric(VALUE)]
eos <- lapply(eos, function(eo) eo[, VALUE:=as.numeric(VALUE)]) 
eos
k
eos
eos
eos
eos
eos.melt
eos
eos
eos
eos
time
eos[[1]]['Switzerland']
eos[[1]]
unique(eos[[1]]$country)
country.a
country.q
missing.country
x
x
eos[[1]]
eos[[1]]$TIME
quarters
eos$eo.quarter$TIME
quarter.subs
quarters
quarters
quarters
quarters
quarter-string
quarter.strings
quarter.strings
)
quarter.strings
quarter.strings
eos$eo.quarter
