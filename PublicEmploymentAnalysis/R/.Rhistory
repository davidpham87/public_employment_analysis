eo.a[country=='USA', td(yrg~1, to=4, method='Denton-Chollete')]
y <- eo.a[country=='USA']$yrg
td(y~1, to=4, method='Denton-Chollete')
td(formula = y~1, to=4, method='Denton-Chollete')
y
eo.a[country=='USA', .(TIME, yrg)]
y <- eo.a[country=='USA', .(TIME, yrg)]
ts
data(swisspharma)
sales.a
str(sales.a)
ts(y$yrg, start=y$TIME[1])
td(ts(y$yrg, start=y$TIME[1]) ~ 1)
td(ts(y$yrg, start=y$TIME[1]) ~ 1, method='denton-cholette')
y <- ts(y$yrg, start=y$TIME[1])
td(y ~ 1, method='denton-cholette')
td(y ~ 1)
td(y ~ 1, method='denton')
summary(td(y ~ 1, method='denton'))
predict(td(y ~ 1, method='denton'), 2011.5)
predict(td(y ~ 1, method='denton'))
plot(predict(td(y ~ 1, method='denton')))
dev.new()
plot(y)
yout <- predict(td(y ~ 1, method='denton'))
yout
yout$value
str(yout)
yout[1:length(yout)]
predict(y, 2015)
predict(yout, 2015)
td(y ~ 1, method='denton')
predict(td(y ~ 1, method='denton'), newdata=2015)
predict(td(y ~ 1, method='denton'), newdata='2015')
td(y ~ 1, method='denton')
?td
yout <- predict(td(y ~ 1, method='denton'))
?yout
window(yout, c(2010, 1), c(2012, 4))
as.numeric(window(yout, c(2010, 1), c(2012, 4)))
eo.a
eo.a$er
eo.a$ydh
y <- ts(y$yrg, start=y$TIME[1])
y.data  <- eo.a[country='USA', .(TIME, ydrh)]
y.data  <- eo.a[country=='USA', .(TIME, ydrh)]
y.data
t = y.data$TIME
y <- y.data$ydrh
t
y
min(t)
ts(y, min(t))
y.ts <- ts(y, min(t))
interpolateQuarter(t, y)
interpolateQuarter(t, y, 'denton-cholette')
plot(interpolateQuarter(t, y, 'denton-cholette'))
plot(interpolateQuarter(t, y, method.interpolation='denton-cholette'))
plot(interpolateQuarter(t, y, method.interpolation='denton-cholette'), type='l')
dev.new()
plot(interpolateQuarter(t, y), type='l')
plot(interpolateQuarter(t, y), type='l')
plot(interpolateQuarter(t, y, method.interpolation='denton-cholette'), type='l')
interpolateQuarter(t, y, method.interpolation='denton-cholette')
interpolateQuarter(t, y, method.interpolation='denton-cholette')
interpolateQuarter(t, y)
data <- na.omit(data.table(t, y))
data
t.idx <- t >= min(data$t) & t <= max.time
max.time = 2016
data
method.interpolation <- 'denton-cholette?
'
method.interpolation <- 'denton-cholette'
y.ts
yout
interpolateQuarter(t, y)
interpolateQuarter(t, y)
interpolateQuarter(t, y, method.interpolation='denton-cholette')
plot(interpolateQuarter(t, y, method.interpolation='denton-cholette'))
interpolateQuarter(t, y, method.interpolation='denton-cholette')
plot(interpolateQuarter(t, y))
interpolateQuarter(t, y, method.interpolation='denton-cholette')
plot(interpolateQuarter(t, y, method.interpolation='denton-cholette'))
plot(interpolateQuarter(t, y, method.interpolation='denton-cholette'), type='l')
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
x
eo.q
eo.q
n
n
n
n
s
n
n
n
n
n
c
y.ts <- ts(data$y, start = min(data$t))
data
t
y
data
tail(data)
t
y
na.omit(data.table(t, y))
n
n
y.ts
data
xyplot(gdpvd ~ TIME | country, eo.q)
xyplot(gdpvd ~ TIME | country, eo.q, type='l')
xyplot(gdpvd ~ TIME | country, eo.a, type='l')
xyplot(gdpvd ~ TIME | country, eo.a, type='l')
xyplot(gdpvd ~ TIME | country, eo.q, type='l')
xyplot(gdpvd ~ TIME | country, eo.a[country=='USA'], type='l')
xyplot(gdpvd ~ TIME | country, eo.q[country=='USA'], type='l')
xyplot(gdpvd ~ TIME | country, eo.q[country=='USA'], type='l')
dev.off()
dev.off()
x
xyplot(nlg_to_gdpv ~ TIME | country, x)
xyplot(nlg_to_gdpv ~ as.numeric(TIME) | country, x)
xyplot(exp(nlg_to_gdpv) ~ as.numeric(TIME) | country, x, type='l')
xyplot(log(nlg_to_gdpv) ~ as.numeric(TIME) | country, x, type='l')
xyplot(nlg_to_gdpv ~ as.numeric(TIME) | country, x, type='l')
cols
x[, cols, with=F]
x
x.lm
summary(x.lm)
x
x$TIME
x$TIME
plot(x.lm)
x
head(x)
x
showdiag(x.lm)
x
head(x)
cols
head(x)
head(x)
head(x)
head(x)
names(x)
names(x)
x[, cols, with=F]
head(x)
gini.lm
summary(gini.lm)
summary(nlg.lm)
new.data
0L
new.data
as.double
warnings()
eo.q
eo.q
'
)
x
eo.q
x
eo.q
x
x
x[, govfrac]
x
x
x
x
x
warnings()
eo.q
eo.q
eo.q[!is.na(ny_gdp_totl_rt_zs_interpolated)]
warnings()
warnings()
res
length(res)
c
warnings()
head(eo.q)
head(eo.q, 235)
head(eo.q, 232)
yout
yout
data
yout
data
yout
y.td
predict(y.td)
t
predict(y.td)
index(predict(y.td)9
index(predict(y.td))
max.time
t[t>max.time]
t[t>max.time+1]
c
c
e
c
c
c
c
c
c
c
c
c
e
e
e
e
e
c
c
res
t
yout.index
length(time)
length(t)
length(res)
max.time <- max.time - 0.25
    res <- c(rep(NA, times=length(t[t<min(yout.index)])),
             yout,
             rep(NA, times=length(t[t>max.time])))

res
length(res)
n
n
n
n
n
n
n
n
n
n
n
n
length(res)
c
warnings()
warnings()
warnings()
head(eo.q, 232)
head(eo.q, 232)[, list(TIME, ny_gdp_totl_rt_zs_interpolated)]
na.omit(head(eo.q, 232)[, list(TIME, ny_gdp_totl_rt_zs_interpolated)]9
na.omit(head(eo.q, 232)[, list(TIME, ny_gdp_totl_rt_zs_interpolated)])
new.data
new.data[country=='AUD']
new.data[country=='AUS']
na.omit(head(eo.q, 232)[, list(TIME, ny_gdp_totl_rt_zs_interpolated)])
warnings()
eo.q
eo.q
eo.q[country=='AUS']
eo.q[country=='AUS'][, list(TIME, ny_gdp_totl_rt_zs_interpolated)]
na.omit(eo.q[country=='AUS'][, list(TIME, ny_gdp_totl_rt_zs_interpolated)])
na.omit(eo.q[country=='AUS'][, list(TIME, parlsys_interpolated)])
na.omit(eo.q[country=='AUS'][, list(TIME, employmentindex_interpolated)])
warnings()
warnings()
na.omit(eo.q[country=='AUS'][, list(TIME, author)])
na.omit(eo.q[country=='AUS'][, list(TIME, author_interpolated)])
new.data
new.data[country=='AUS', list(TIME, author_annual_data)]
new.data[country=='AUS', list(TIME, muni_annual_data)]
na.omit(eo.q[country=='AUS'][, list(TIME, muni_interpolated)])
warnings()
na.omit(eo.q[country=='AUS'][, list(TIME, muni_interpolated)])
na.omit(eo.q[country=='AUS'][, list(TIME, state_interpolated)])
na.omit(eo.q[country=='AUS'][, list(TIME, author_interpolated)])
na.omit(eo.q[country=='AUS'][, list(TIME, authon_interpolated)])
na.omit(eo.q[country=='AUS'][, list(TIME, auton_interpolated)])
eo.q
na.omit(eo.q[country=='AUS'][, list(TIME, gini_market_interpolated)])
warings()
warnings()
eo.q
eo.q
n
n
yout
method.interpolation
n
yout
n
n
n
n
yout
n
n
n
n
method.interpolation
na.size.before
n
c
n
n
eo.q
warnings()
eo.q
warnings()
warnings()
eo.q
eo.q
eo.q[country=='AUS', list(TIME, gini_market_interpolated)]
na.omit(eo.q[country=='AUS', list(TIME, gini_market_interpolated)])
warnings()
eo.q
eo.q
eo.q
eo.q
warnings()
eo.q[country=='USA']
eo.q[country=='USA'][, list(TIME, gdp)]
tail(eo.q[country=='USA'][, list(TIME, gdp)], 50)
tail(eo.a[country=='USA'][, list(TIME, gdp)], 50)
tail(eo.a[country=='USA'][, list(TIME, gdp_interpolated)], 50)
eo.a[country=='USA'][, list(TIME, gdp_interpolated)]
eo.a[country=='USA']
eo.a[country=='USA'][, list(TIME, gdp_annual_data)]
tail(eo.a[country=='USA'][, list(TIME, gdp_interpolated)], 50)
tail(eo.q[country=='USA'][, list(TIME, gdp)], 50)
eo.q
eo.q[country=='USA'], list(TIME, gdp)]
eo.q[country=='USA'][, list(TIME, gdp)]
tail(eo.q[country=='USA'][, list(TIME, gdp)], 20)
eo.a
eo.a[country=='USA']
eo.a[country=='USA'][, list(year, 100*yrg/gdp)]
eo.a[country=='USA'][, list(year, 100*yrg_annual_data/gdp_annual_data)]
eo.a[country=='USA'][, list(year, 100*yrg_annual_data/gdp_annual_data)]
eo.a[country=='USA'][, list(year, yrg_annual_data, gdp_annual_data)]
eo.a[country=='USA'][, list(year, yrg_annual_data)]
eo.a[country=='USA'][, list(TIME, 100*yrg_annual_data/gdp_annual_data)]
eo.a[country=='NOR'][, list(TIME, 100*yrg_annual_data/gdp_annual_data)]
eo.q
eo.q[country=='USA']
eo.q[country=='USA'][, list(TIME, gdp)]
tail(eo.q[country=='USA'][, list(TIME, gdp)])
tail(eo.q[country=='USA'][, list(TIME, gdp)], 10)
tail(eo.q[country=='USA'][, list(TIME, gdp)], 20)
head(tail(eo.q[country=='USA'][, list(TIME, gdp)], 20), 10)
tail(eo.a[country=='USA'][, list(TIME, gdp)], 20)
tail(eo.a[country=='USA'][, list(TIME, 100*yrg/gdp)], 20)
pdf('plot/government_revenue.pdf', 12, 7, onefile=TRUE)
  xyplot(government_revenue ~ TIME.NUMERIC | country,
         x[, c('government_revenue', 'country', 'TIME.NUMERIC'), with=F],
         type='l', main='Government Revenue')
dev.off()
dev.off()
  pdf('plot/government_revenue_splines.pdf', 12, 7, onefile=TRUE)
  xyplot(government_revenue ~ TIME.NUMERIC | country,
         x[, c('government_revenue', 'country', 'TIME.NUMERIC'), with=F],
         type='l', main='Government Revenue')

dev.off()
eo.a[country=='USA'][, list(TIME, xgs, mgs)]
eo.a[country=='USA'][, list(TIME, xgs, mgs)]
tail(eo.q[country=='USA'][, list(TIME, xgs, mgs)])
tail(eo.q[country=='USA'][, list(TIME, xgs, mgs)], 20)
head(tail(eo.q[country=='USA'][, list(TIME, xgs, mgs)], 20), 10)
tail(eo.a[country=='USA'][, list(TIME, xgs, mgs)], 3)
tail(eo.a[country=='USA'][, list(TIME, xgs, mgs)], 5)
head(tail(eo.a[country=='USA'][, list(TIME, xgs, mgs)], 5), 3)
head(tail(eo.a[country=='USA'][, list(TIME, xgs, mgs)], 6), 3)
head(tail(eo.q[country=='USA'][, list(TIME, xgs, mgs)], 20), 10)
head(tail(eo.q[country=='USA'][, list(TIME, xgs, mgs)], 24), 10)
head(tail(eo.q[country=='USA'][, list(TIME, xgs, mgs)], 24), 12)
head(tail(eo.a[country=='USA'][, list(TIME, xgs, mgs)], 6), 3)
head(tail(eo.a[country=='USA'][, list(TIME, gdp, xgs, mgs)], 6), 3)
head(tail(eo.q[country=='USA'][, list(TIME, xgs, mgs)], 24), 12)
head(tail(eo.q[country=='USA'][, list(TIME, gsp, xgs, mgs)], 24), 12)
head(tail(eo.q[country=='USA'][, list(TIME, gdp, xgs, mgs)], 24), 12)
x
head(tail(eo.q[country=='USA'][, list(TIME, gdp, xgs, mgs, 100*(mgs+xgs)/gdp], 24), 12)
head(tail(eo.q[country=='USA'][, list(TIME, gdp, xgs, mgs, 100*(mgs+xgs)/gdp)], 24), 12)
head(tail(eo.q[country=='LUX'][, list(TIME, gdp, xgs, mgs, 100*(mgs+xgs)/gdp)], 24), 12)
head(tail(eo.a[country=='LUX'][, list(TIME, gdp, xgs, mgs, 100*(mgs+xgs)/gdp)], 24), 12)
eo.a[country=='LUX'][, list(TIME, gdp, xgs, mgs, 100*(mgs+xgs)/gdp)]
eo.a[country=='BEL'][, list(TIME, gdp, xgs, mgs, 100*(mgs+xgs)/gdp)]
eo.a[country=='SWE'][, list(TIME, gdp, xgs, mgs, 100*(mgs+xgs)/gdp)]
eo.q[country=='SWE'][, list(TIME, gdp, xgs, mgs, 100*(mgs+xgs)/gdp)]
eo.q[country=='GBR'][, list(TIME, gdp, xgs, mgs, 100*(mgs+xgs)/gdp)]
eo.a[country=='GBR'][, list(TIME, gdp, xgs, mgs, 100*(mgs+xgs)/gdp)]
x
x
x[, left]
x
x
x
names(x)
x
xyplot(government_revenue ~ TIME | country, x)
xyplot(government_revenue ~ TIME | country, x, type='l')
  xyplot(government_revenue ~ TIME.NUMERIC | country,
         x[, c('government_revenue', 'country', 'TIME.NUMERIC'), with=F],
         type='l', main='Government Revenue')

names(x)
new.data
x
x[left_interpolated!=execrlc]
x[left_interpolated!=execrlc][, list(country, TIME)]
x[left_interpolated!=execrlc][, list(country, TIME, execrlc, left)]
x[left_interpolated!=execrlc][, list(country, TIME, execrlc, left_interpolated)]
x[left_interpolated!=execrlc][, list(country, TIME, (execrlc-1)/3, left_interpolated)]
x[left_interpolated!=execrlc][, list(country, TIME, (execrlc-1)/2, left_interpolated)]
x[, list(country, TIME, execrlc=(execrlc-1)/2, left_interpolated)]
x[, list(country, TIME, (execrlc-1)/2, left_interpolated)]
na.omit(x[, list(country, TIME, (execrlc-1)/2, left_interpolated)])
na.omit(x[, list(country, TIME, execrlc=(execrlc-1)/2, left_interpolated)])
na.omit(x[, list(country, TIME, execrlc=(execrlc-1)/2, left_interpolated)])[execrlc!=left_interpolated]
as.data.frame(na.omit(x[, list(country, TIME, execrlc=(execrlc-1)/2, left_interpolated)])[execrlc!=left_interpolated])
n
dev.off()
dev.off()
x
names(x)
names(x)
names(x)
x
x
x[, ES]
x[, es]
xyplot(es ~ TIME.NUMERIC | country, x)
xyplot(es/lf ~ TIME.NUMERIC | country, x)
xyplot(100*es/lf ~ TIME.NUMERIC | country, x)
eo.a
eo.a[country=='NOR']
eo.a[country=='NOR', list(year, es)]
eo.a[country=='NOR', list(time, es)]
eo.a[country=='NOR', list(TIME, es)]
x
x
lassen
x.lassen
x.lassen
names(x.lassen)
x.lm
summary(x.lm)
x[left!=NA]
x[!is.na(left)]
x[s.na(left)]
x[is.na(left)]
x
as.data.table(x.lm$model)
xyplot(egr ~ TIME | country, as.data.table(x.lm$model))
xyplot(egr ~ TIME | country, as.data.table(x.lm$model), type='l')
xyplot(cumsum(egr) ~ TIME | country, as.data.table(x.lm$model), type='l')
xyplot(cumsum(egr) ~ TIME | country, as.data.table(x.lm$model), type='l')
x
(lassen.lm)
lassen.lm$model
unique(lassen.lm$model$country)
length(unique(lassen.lm$model$country))
length(unique(x$country))
setdiff(unique(x$country), unique(lassen.lm$model$country))
names(x)
x$auton_interpolated
x[, list(country, TIME, auton_interpolated)]
na.omit(x[, list(country, TIME, auton_interpolated), by='country'])
data.frame(na.omit(x[, list(country, TIME, auton_interpolated), by='country'])) 
length(unique(data.frame(na.omit(x[, list(country, TIME, auton_interpolated), by='country']))$country))
unique(data.frame(na.omit(x[, list(country, TIME, auton_interpolated), by='country']))$country)
x[, list(country, TIME, muni_interpolated)]
x[, unique(muni_interpolated)]
x[, unique(muni_interpolated)]
x[, unique(state_interpolated)]
x[, unique(state_interpolated)]
pvalue.adjust
summary(x.lm)
str(summary(x.lm))
summary(x.lm)$df
summary(x.lm)$coefficient
summary(x.lm)$coefficient[, 4]
p.adjust(summary(x.lm)$coefficient[, 4])
as.data.frame(p.adjust(summary(x.lm)$coefficient[, 4]))
as.data.frame(p.adjust(summary(x.lm)$coefficient[, 4]), n=9)
as.data.frame(p.adjust(summary(x.lm)$coefficient[, 4], n=9))
as.data.frame(p.adjust(summary(x.lm)$coefficient[1:9, 4],))
as.data.frame(p.adjust(summary(x.lm)$coefficient[1:10, 4],))
