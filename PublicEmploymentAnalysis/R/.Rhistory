DT
DT
merge(eo.q, DT)
DT
x
x
install.packages('scales')
library(ggplot2)
?e.divisive
library(changepoint)
install.packages('changepoint')
library(changepoint)
?pdf
install.packages('plotly')
library(plotly)
install.package('stringi')
install.packages('stringi')
library(plotly)
x.lm
summary(x.lm)
plot(x.lm)
x.lm$residuals
1/x.lm$residuals
x.lm$model
x.wlm
summary(x.wlm)
plot(x.wlm)
x.wlm
summary(x.wlm)
plot(x.wlm)
plot(x.wlm)
plot(x.wlm)
plot(x.wlm)
dev.new()
plot(x.lm)
showdiag(x.lm)
x.lm
x.lm$residuals^2/sum(x.lm$residuals^2)
sum(1+x.lm$residuals^2)/(1+x.lm$residuals^2)
showdiag(x.wlm)
x.lm
summary(x.lm)
summary(x.lm)
plot(x.lm)
x.lm
plot(x.lm)
plot(x.lm)
plot(x.lm)
plot(x.lm)
colnames(x)
x.lm
summary(x.lm)
x.lm$model
solve(x.lm$model)
solve(as.matrix(x.lm$model))
solve(as.numeric(as.matrix(x.lm$model)))
install.packages(grplasso)
install.packages('grplasso')
library(grplasso)
grplasso
grplasso::grplasso
x.lm.data
head(x.lm.data)
model.frame(egr_diff . ~, x.lm.data)
model.frame(egr_diff ~ . , x.lm.data)
model.matrix(egr_diff . ~, x.lm.data)
mf
model.matrix(mf)
model.matrix(egr_diff . ~, x.lm.data)
model.matrix(egr_diff ~ ., x.lm.data)
x.lm
showdiag(x.lm)
x[, egr]
x[, egr]
lm(egr~ ., data=x[, cols, with=FALSE])
lm(egr~ ., data=x[, c('egr', 'country', cols), with=FALSE])
summary(lm(egr~ ., data=x[, c('egr', 'country', cols), with=FALSE]))
x.lm
summary(x.lm)
summary(lm(egr_diff~ ., data=x[, c('country', cols), with=FALSE]))
x.gls
summary(x.gls)
summary(x.gls)
x[, cols, with=FALSE]
x[, cols.gls, with=FALSE][, acf(gdpv_annpct), by='country']
x[, cols.gls, with=FALSE][, pacf(gdpv_annpct), by='country']
summary(x.gls)
showdiag(x.gls)
showdiag(x.gls)
x.gls
plot(x.gls)
plot(x.gls, resid(., type='p') ~ fitted(.) | country) 
plot(x.gls, resid(., type='p') ~ fitted(.) | country, abline=0) 
plot(x.gls, country ~ resid(., type='p')) 
plot(x.gls, egr ~ fitted(.) | country, abline = c(0,1))
plot(x.gls)
summary(x.gls)
anova(x.gls)
x.lms <- gls(egr_diff ~ ., na.omit(x[, c(cols, 'country'), with=FALSE]))
x.lms
summary(x.gls)
x.lm
summary(x.lm)
anova(x.lm)
x.lms
summary(x.lm)
summary(x.lm)
summary(x.lm)
summary(x.lm)
anove(x.lm)
anova(x.lm)
anova(x.lm)
showdiag(x.lm)
showdiag(x.lm)
showdiag(x.lm)
install.packages('DescTools')
x
x
colnames(x)
colnames(x)[1]
x
colnames(x)
idx
x[, TIME]
parseQuarter('1982', 'Q3')
parseQuarter(c('1982', 'Q3'))
)
y
x
y
y
x
x
x
DT
colnames(DT)
eo.q
x
library(lattice)
xyplot(gdpv_annpct ~ TIME, eos[[2]])
xyplot(gdpv_annpct ~ TIME | country, eos[[2]])
xyplot(gdpv_annpct ~ TIME | country, eos[[2]], type='l')
xyplot(gdpv_annpct ~ TIME | country, eos[[2]], type='l')
xyplot(gdpv ~ TIME | country, eos[[2]], type='l')
x[, unr_diff]
x[, unr]
plot(x.lm)
f
cor(x[, cols])
cor(x[, cols, with=F])
cor(x[, cols, with=F], use='pairwise')
xyplot(fitted(x.lm) ~ x.lm$model$egr_diff| country, x.lm)
xyplot(fitted(x.lm) ~ x.lm$model$egr_diff| country, x.lm$model)
xyplot(fitted(x.lm) ~ egr_diff| country, x.lm$model)
xyplot(fitted(x.lm) ~ x.lm$model$egr_diff| country, x.lm$model)
xyplot(fitted(x.lm) ~ egr_diff| country, x.lm$model)
xyplot(fitted(x.lm) ~ egr_diff| country, x.lm$model, abline=(0, 1))
xyplot(fitted(x.lm) ~ egr_diff| country, x.lm$model, abline=c(0, 1))
xyplot(fitted(x.lm) ~ egr_diff| country, x.lm$model, abline=c(0, 1), aspect=1)
  gg <- compareValue(as.data.table(cbind(x.model.lm, y.fit)), y.fit='y.fit', egr='egr\\_diff')
x.lm
x.model.lm
gg <- compareValue(as.data.table(cbind(x.model.lm, y.fit)), y.fit='y.fit', egr='egr\\_diff')
x.model.lm$TIME
x.model.lm$TIME
)
colnames(x)
>
x.new
colnames(x.new)
library(rpart)
x.rpart
plot(x.rpart)
text(x.rprat)
text(x.rpart)
dev.new()
plot(x.rpart)
text(x.rpart)
gam
form.gam
form.gam
x.gam
plot(x.gam)
summary(x.gam)
par(mfrow=c(2, 4))
summary(x.gam)
plot(x.gam)
plot(x.gam)
dev.new()
par(mfrow=c(2, 4))
plot(x.gam)
hist(x[, egr_diff])
boxplot(x[, egr_diff])
bwplot(~egr_diff | country, x)
bwplot(egr_diff ~  | country, x)
bwplot(egr_diff ~ . | country, x)
bwplot( ~ egr_diff| country, x)
diff(c(1, 2, 4, 8), arithemtic=F)
diff(c(1, 2, 4, 8), arithemtic=FALSE)
diff(c(1, 2, 4, 8), arithemtic=TRUE)
x <- c(1, 2, 4, 8)
lag(x, 1)
lag(x, -1)
lag(x, 1)
shift(x, 1)
shift(x, -1)
shift(x, 1)
x/shift(x, 1)
x/shift(x, 1)*100
summary(x.lm)
plot(x.lm)
bwplot(~ egr_diff | country, x)
x 
z <- c(1, 2, 3, 4)
z - shift(z)
plot(x.gam)
dev.off()
dev.off()
dev.off()
eo.q
eo.q
  xyplot(gdpv_yoy_annpct ~ TIME.NUMERIC | country,
       na.omit(x[, c(cols, 'egr', 'country', 'TIME.NUMERIC'), with=F]))
x[, c(cols, 'egr', 'country', 'TIME.NUMERIC'), with=F])
x[, c(cols, 'egr', 'country', 'TIME.NUMERIC'), with=F]
names(x)
dev.new()
names(x)
install.packages('mitools')
lapply(swidd, str)
swidd
ls()
swiid
ls()
swiid
str(swiid)
eo.q
warnings()
dev.off()
dev.off()
dev.off()
dev.off()
names(eo.q)
eo.q[,]
eo.q[,TIME]
eo.q
names(eo.q)
sort(cols.to.save)
cols.to.save
x[, cols.to.save, with=F]
x[, cols.to.save, with=F]
x[, cols.to.save, with=F]
new.data
names(x)
dev.new()
  xyplot(fiscal_transparency_interpolated~ TIME.NUMERIC | country,
         x[, c('fiscal_transparency_interpolated', 'country', 'TIME.NUMERIC'), with=F],
         type='l', main='IMF Fiscal Transparency Score')

cols.to.save
x[, cols.to.save]
x[, cols.to.save, with=F]
x[, cols.to.save, with=F]
for(e in cols.to.save){ print(e) }
x
x
x
x
dev.new()
eo.a
xyplot(yrg/gdpv*100 ~ year | country , eo.a)
xyplot(yrng/gdpv*100 ~ year | country , eo.a)
names(ea)
names(eo.a)
xyplot(yrg_annual_data/gdpv*100 ~ year | country , eo.a)
xyplot(yrg_annual_data/gdpv_annual_data*100 ~ year | country , eo.a)
xyplot(yrg_annual_data/gdpv_annual_data*100 ~ time | country , eo.a)
xyplot(yrg_annual_data/gdpv_annual_data*100 ~ Time | country , eo.a)
xyplot(yrg_annual_data/gdpv_annual_data*100 ~ TIME | country , eo.a)
xyplot(yrg_annual_data/gdpv_annual_data*100 ~ TIME | country , eo.a, type='l')
xyplot(yrgt/gdpv_annual_data*100 ~ TIME | country , eo.a, type='l')
xyplot(yrg_annual_data/gdpv_annual_data*100 ~ TIME | country , eo.a, type='l')
eo.q
x
dev.new()
dev.new()
install.packages('tempdisagg')
loadPackages()
eo.a$yrg
eo.a[country=='USA', .(TIME, yrg)]
eo.a[country=='USA', td(yrg~1)]
eo.a[country=='USA', td(yrg~1, to=4)]
eo.a[country=='USA', td(yrg~1, to=4, method='Denton-Chollete')]
y <- eo.a[country=='USA']$yrg
td(y~1, to=4, method='Denton-Chollete')
td(formula = y~1, to=4, method='Denton-Chollete')
y
eo.a[country=='USA', .(TIME, yrg)]
y <- eo.a[country=='USA', .(TIME, yrg)]
ts
data(swisspharma)
sales.a
str(sales.a)
ts(y$yrg, start=y$TIME[1])
td(ts(y$yrg, start=y$TIME[1]) ~ 1)
td(ts(y$yrg, start=y$TIME[1]) ~ 1, method='denton-cholette')
y <- ts(y$yrg, start=y$TIME[1])
td(y ~ 1, method='denton-cholette')
td(y ~ 1)
td(y ~ 1, method='denton')
summary(td(y ~ 1, method='denton'))
predict(td(y ~ 1, method='denton'), 2011.5)
predict(td(y ~ 1, method='denton'))
plot(predict(td(y ~ 1, method='denton')))
dev.new()
plot(y)
yout <- predict(td(y ~ 1, method='denton'))
yout
yout$value
str(yout)
yout[1:length(yout)]
predict(y, 2015)
predict(yout, 2015)
td(y ~ 1, method='denton')
predict(td(y ~ 1, method='denton'), newdata=2015)
predict(td(y ~ 1, method='denton'), newdata='2015')
td(y ~ 1, method='denton')
?td
yout <- predict(td(y ~ 1, method='denton'))
?yout
window(yout, c(2010, 1), c(2012, 4))
as.numeric(window(yout, c(2010, 1), c(2012, 4)))
eo.a
eo.a$er
eo.a$ydh
y <- ts(y$yrg, start=y$TIME[1])
y.data  <- eo.a[country='USA', .(TIME, ydrh)]
y.data  <- eo.a[country=='USA', .(TIME, ydrh)]
y.data
t = y.data$TIME
y <- y.data$ydrh
t
y
min(t)
ts(y, min(t))
y.ts <- ts(y, min(t))
interpolateQuarter(t, y)
interpolateQuarter(t, y, 'denton-cholette')
plot(interpolateQuarter(t, y, 'denton-cholette'))
plot(interpolateQuarter(t, y, method.interpolation='denton-cholette'))
plot(interpolateQuarter(t, y, method.interpolation='denton-cholette'), type='l')
dev.new()
plot(interpolateQuarter(t, y), type='l')
plot(interpolateQuarter(t, y), type='l')
plot(interpolateQuarter(t, y, method.interpolation='denton-cholette'), type='l')
interpolateQuarter(t, y, method.interpolation='denton-cholette')
interpolateQuarter(t, y, method.interpolation='denton-cholette')
interpolateQuarter(t, y)
data <- na.omit(data.table(t, y))
data
t.idx <- t >= min(data$t) & t <= max.time
max.time = 2016
data
method.interpolation <- 'denton-cholette?
'
method.interpolation <- 'denton-cholette'
y.ts
yout
interpolateQuarter(t, y)
interpolateQuarter(t, y)
interpolateQuarter(t, y, method.interpolation='denton-cholette')
plot(interpolateQuarter(t, y, method.interpolation='denton-cholette'))
interpolateQuarter(t, y, method.interpolation='denton-cholette')
plot(interpolateQuarter(t, y))
interpolateQuarter(t, y, method.interpolation='denton-cholette')
plot(interpolateQuarter(t, y, method.interpolation='denton-cholette'))
plot(interpolateQuarter(t, y, method.interpolation='denton-cholette'), type='l')
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
x
eo.q
eo.q
n
n
n
n
s
n
n
n
n
n
c
y.ts <- ts(data$y, start = min(data$t))
data
t
y
data
tail(data)
t
y
na.omit(data.table(t, y))
n
n
y.ts
data
xyplot(gdpvd ~ TIME | country, eo.q)
xyplot(gdpvd ~ TIME | country, eo.q, type='l')
xyplot(gdpvd ~ TIME | country, eo.a, type='l')
xyplot(gdpvd ~ TIME | country, eo.a, type='l')
xyplot(gdpvd ~ TIME | country, eo.q, type='l')
xyplot(gdpvd ~ TIME | country, eo.a[country=='USA'], type='l')
xyplot(gdpvd ~ TIME | country, eo.q[country=='USA'], type='l')
xyplot(gdpvd ~ TIME | country, eo.q[country=='USA'], type='l')
dev.off()
dev.off()
x
xyplot(nlg_to_gdpv ~ TIME | country, x)
xyplot(nlg_to_gdpv ~ as.numeric(TIME) | country, x)
xyplot(exp(nlg_to_gdpv) ~ as.numeric(TIME) | country, x, type='l')
xyplot(log(nlg_to_gdpv) ~ as.numeric(TIME) | country, x, type='l')
xyplot(nlg_to_gdpv ~ as.numeric(TIME) | country, x, type='l')
cols
x[, cols, with=F]
x
x.lm
summary(x.lm)
x
x$TIME
x$TIME
plot(x.lm)
x
head(x)
x
showdiag(x.lm)
x
head(x)
cols
head(x)
head(x)
head(x)
head(x)
names(x)
names(x)
x[, cols, with=F]
head(x)
gini.lm
summary(gini.lm)
summary(nlg.lm)
new.data
0L
new.data
as.double
warnings()
eo.q
eo.q
'
)
x
eo.q
x
eo.q
x
x
x[, govfrac]
x
x
x
x
