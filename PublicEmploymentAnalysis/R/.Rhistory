head(x[, list(country, gdpv, ydrh, ydrh/gdpv)])
head(eos[[1]][, list(country, gdpv, ydrh, ydrh/gdpv)])
eo.desc['ydrh']
eos[[1]][country.a]
eos[[1]][country.a][, head(.SD, 5), by='country']
eos[[1]][country.a][, tail(.SD, 1), by='country'][
]
eos[[1]][country.a][TIME==2014[, tail(.SD, 1), by='country']
]
eos[[1]][country.a][TIME==2014][, tail(.SD, 1), by='country']
eo.desc['yrh']
eos[[1]][country.a][TIME==2014][, tail(.SD, 1), by='country'][, list(country, ydrh, gdpv)]
x.lm$model
nrow(x.lm$model)
x.simple.model
x.lm.s
x.step.loww
x.step.low
x.lm.lower
x.lm
x.step.up
x.lm
summary(x.lm)
incomeineq.lm$model
nrow(incomeineq.lm$model)
as.data.table(incomeineq.lm$model)
as.data.table(lpoptot.lm$model)
as.data.table(incomeineq.lm$model)
setkey(x.new, TIME, country)
)
img.gfs
imf.gfs
x.new
x.new
ls
getwd()
setwd('/R')
setwd('"/home/david/gdrive/ETHZ/public_employment/PublicEmploymentAnalysis/R"e)
)
'
"
'
'
'"
setwd("/home/david/gdrive/ETHZ/public_employment/PublicEmploymentAnalysis/R")
gini
gini.metl
gini.melt
2
n
getwd()
p
x
cf.eda <- readRDS('../data/lasso-coeff.rds')
cf.eda
cf.eda[, V2]
eo.desc[cf.eda[, V2]]
eo.desc[cf.eda[, V2]][substr(VARIABLE, 1, 7) != 'country']
nrow(x)
summary(x.lm)
compareValue(x, yrh='yrh')
compareValue(x, yrh='ydrh')
compareValue(x, yrh='ydrh_to_gdpv')
compareValue(x, egr='egr')
x
eo.a$TIME
as.double(eo.a$TIME)
col
col.new
eo.a
eo.q
eos[[2]]
eo.q
]
eo.q[, TIME] 
compareValue(eo.q[country=='USA'], ydrh='ydrh', ydrh.i='ydrh_interpolated')
compareValue(eo.q, ydrh='ydrh', ydrh.i='ydrh_interpolated')
compareValue(eo.q[country.q], ydrh='ydrh', ydrh.i='ydrh_interpolated')
country.q
country.a
x
x[, unique(country)]
warnings()
eo.q[country=='HUN']
warnings()
eos[[2]]
eo.a
eo.a
eq.q
eo.q
eo.q
eo.q
eo.q
compareValue(eo.q, x='ydrh', y='ydrh_interpolated')
eo.q
warnings()
eo.qi
eo.qi
eo.qi
eo.qi
eo.qi
eo.qi
x
x
head(x)
x.lm$model
x[, is.na(egr)]
x[, is.na(gdpv_annpct)]
x[, cols]
x[, cols, with=FALSE]
na.pattern(x[, cols, with=FALSE])
library(Hmisc)
na.pattern(x[, cols, with=FALSE])
cols
new.data
new.data[, fiscal_transparency]
eo.q
eo.q
eo.q
x.lm
na.pattern(x)
na.pattern(x[, cols])
na.pattern(x[, cols, with=F])
cols
eo.q[is.na(gdpv_annpct)]
cols
na.pattern(x[, cols, with=F])
x['BEL', cols]
x['BEL']
setkey(x, country)
x['BEL']
x['BEL', cols, with=F]
na.pattern(x['BEL', cols, with=F])
x.lm$model
data.plot
quarters.time
data.plot[, paste(YEAR, '-', QUARTER)]
quarters.time
data.plot
dev.off()
max.time
max.time
lassen
lassen
imf.gfs
x.imf.gfs
imf.gfs
colnames(imf.gfs)
x.lassen
x.img.fs
x.imf.gfs
x.imf.gfs
x.imf.gfs
install.packages('plm')
plm
plm
ff
ff
ff
help(dynaformula)
help(dynformula)
ff
ff
ff
ff
ff
ff.dyn
x[, cols]
x.plm
x.plm
lm(ff, x[, cols, with=FALSE])
x.lm
diff(c(1, 2, 4, 8))
ff.dyn
traceback()
x
compareValue(x, egr='egr')
par(mfrow=c(2,2))
plot(x.lm)
ff
wrapFormula
plot(x.lm.s)
plot(x.lm)
diff(c(1, 2, 4, 8), arithmetic=F)
diff(c(1, 2, 4, 8), arithmetic=T)
diff(c(1, 2, 4, 8), arithmetic=F)
diff(c(1, 2, 2, 2), arithmetic=F)
diff(c(1, 2, 2, 2), arithmetic=FALSE)
help(diff()
help(diff)
lag(c(1, 2, 3))
lag(c(1, 2, 3), 2)
lag(c(1, 2, 3), 1)
lag(c(1, 2, 3), 2)
lag(c(1, 2, 3), -1)
x.lm
x.lm
summary(x.lm)
x.lm
residuals(x.lm)
plot(residuals(x.lm))
gam.check(x.lm)
plot(gam.check(x.lm))
gam.check(x.lm)
wrapFormula
par(mfrow=c(2, 2))
x.lm.s
plot(x.lm)
install.packages('dynlm')
x.lm.s
library(dynlm)
)
)
summary(x.gam)
terms(x[, cols, with=FALSE], egr ~ . )
terms(data=x[, cols, with=FALSE], egr ~ . )
wrapFormula
form <- formula(terms(egr ~ ., data = x[, cols, with=FALSE]))
form
gls(form, x[, cols, with=FALSE])
gls(form, as.data.frame(x[, cols, with=FALSE]))
gls(form, na.omit(as.data.frame(x[, cols, with=FALSE])))
x.gls
summary(x.gls)
plot(x.lgs)
plot(x.gls)
par(mfrow=c(2,2))
plot(x.lm)
x.gls
summary(x.gls)
plot(x.gls)
summary(x.gls)
x.gls
summary(x.gls)
coef(summary(x.gls))
summary(x.gls)$coefficient
str(summary(x.gls))
summary(x.gls)$varBeta
anova(x.gls)
summary(anova(x.gls))
anova(x.gls)
str(incomeineq.lm, 1)
x.new
x.new[, cols.extended]
x.new[, cols.extended, with=FALSE]
cols.extended
data.plot
colnames(x.new)
)
]
)
}
}
)
cols.extended
stargazer(x.lm)
stargazer(x.lm, title='Regression with main variables', out='lm.tex'))
stargazer(x.lm, title='Regression with main variables', out='lm.tex')
help(stargazer)
str(x.lm, 1)
names(coef(x.lm))
names(coef(x.lm))
cov.labs
cov.labs
cov.labs
colnames(x.lm$model)
description
colnames(x.lm$model)
lpop.lm
names(lpop.lm)
names(coef(lpop.lm))
summary(lpop.lm)
x.lm.s
x
x$TIME
time.numeric
x$TIME
x <- 1:5
x
c(NA, lag(x, 1)
)
c(NA, lag(x, -1))
c(NA, lag(x, 1))
help(lag)
c(NA, lag(x, -1))
head(x[, cols])
head(x[, cols, with=F])
x.lms
x.lm.s
par(mfrow=c(2, 2))
plot(x.lm)
x.lm
)
form
dform
dform
dform
data.plm
dform
summary(x.lm)
summary(x.lm)
var(egr)
x[, var(egr)]
var(x.lm$residuals)
summary(x.lm)
plot(x.lm)
plot(x.lm)
lm(egr ~ country, x)
summary(lm(egr ~ country, x))
summary(x.lm)
x.lm.s
x.lm
summary(x.lm)
x.lm.s
dfrom
dform
summary(x.lm)
x.lm.s
x[, pacf(egr)]
x[, acf(egr)]
x[, acf(egr), by='country']
summary(x.lm)
x.lm.s
x.lm.s
showdiag(x.lm)
na.omit(x[, cols, with=F])
na.omit(x[, cols, with=F])[153]
na.omit(x[, c(cols, 'country'), with=F])[153]
na.omit(x[, c(cols, 'country'), with=F])[260]
y.fitted
y.fat
x.model.lm
as.data.table(cbind(x.model.lm, y.fit))
x.model.lm[, TIME]
x.model.lm[, TIME]
x.model.lm[, lvl2num(TIME)]
cols
x.model.lm
gsub('_', '\\_', colnames(x.model.lm)) 
colnames(x.model.lm)
colnames(x.model.lm)
data.plm
data.plm
form
dform
dynlm(dform, data.plm)
x
x[, cols, with=FALSE]
x[, cols, with=FALSE]$TIME
x.gls
x.gls
DT
form
detach(data.table)
detach('data.table')
detach('package:data.table', unload=TRUE)
1
dform
data.dynlm
dform
x.dynlm <- dynlm(dform, na.omit(data.dynlm))
str(x.dynlm)
showdiag(x.dynlm)
x.dynlm$model
head(x.dynlm$model)
head(x.dynlm$model)
showdiag(x.dynlm)
dynlm
cols
head(x[, cols, with=F])
head(x.dynlm$model)
install.packages('sandwich')
library(sandwich)
library(lmtest)
summary(x.lm)
form
x.gls
library(stargazer)
stargazer(x.gls)
form
form
corAR1(0.9 ~ 1 | country, TRUE)
x.gls
anova(x.gls)
summary(x.gls)
showdiag(x.gls)
plot(x.gls)
plot(x.gls, egr_diff~ fitted(.))
plot(x.gls, egr_diff~ fitted(.), abline=1)
plot(x.gls, egr_diff~ fitted(.), abline=0)
plot(x.gls, egr_diff~ fitted(.), xlim=c(-3, 3))
plot(x.gls, egr_diff~ fitted(.), xlim=c(-2, 3))
line(x.gls)
plot(x.gls)
new.data
na.omit(new.data)
new.data
x.new
x.new$execrlc
x.new
x.new[, list(year, country, execrl)]
x.new[, list(year, country, execrlc)]
x.new[, list(time, country, execrlc)]
x.new[, list(TIME, country, execrlc)]
library(lattice)
xyplot(TIME ~ execrlc | country, x.new[, list(TIME, country, execrlc)])
xyplot(execrlc ~ TIME | country, x.new[, list(TIME, country, execrlc)])
x.new[, execrlc]
x.new
x.new$execrlc
colnames(x.new)
showdiag(yrcurnt.lm)
x.new
showdiag(yrcurnt.lm)
colnames(govrlc.lm$model)
lpoptot.lm
lpoptot.lm$model
x[is.na(lpoptot)]
x.new[is.na(lpoptot)]
x.new[!is.na(lpoptot)]
library(lattice)
xyplot(execrlc ~ TIME | country, x)
colnames(x)
eo.q
eo.q
new.data
eo.q
eo.q
colnames(new.data)
n
n
n
n
n
n
head(new.data)
n
n
n
n
n
n
n
n
n
n
n
n
n
s
colnames(new.data)
new.data
na.omit(new.data[, list(TIME, yrcurnt_corrected)])
na.omit(new.data[, list(TIME, yrcurnt_corrected)])$yrcurnt_corrected
na.omit(new.data[, list(TIME, yrcurnt_corrected)])$yrcurnt_corrected*1.0
na.omit(new.data[, list(TIME, yrcurnt_corrected)])$yrcurnt_corrected*1.4
warnings()
new.data
n
n
n
n
n
n
n
n
n
n
n
n
n
head(eo.q)
head(eo.a)
head(eo.a$TIME)
lapply(new.data, mode)
lapply(new.data, class)
n
n
n
n
new.data
x.new$TIME
x.new
na.omit(x.new[, list(TIME, execrlc_interpolated)])
x.new[, list(TIME, execrlc_interpolated)]
x.new[, list(TIME, execrlc_interpolated)][, is.na(execrlc_interpolated)]
x.new[, list(TIME, execrlc_interpolated)][, is.na(execrlc_interpolated)]
library(lattice)
xyplot(yrcurnt_corrected_interpolated ~ TIME | country, x.new)
xyplot(yrcurnt_corrected_interpolated ~ TIME | country, x.new)
govrlc.lm
summary(govrlc.lm)
x.new[, egr_diff]
x.new[, round(egr_diff, 4)]
shoddiag(x.lm)
showdiag(x.lm)
x.lm
showdiag(x.lm)
plot(x.lm)
plot(x.lm)
